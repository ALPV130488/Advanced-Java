WEBSERVICES:
============			Interoparble
WEB SERVICE IS A SPECIFIATION

THEY ARE NOT PROVIDING ANY API. THEY ARE JUST PROVIDING SOME SPECIFICATINS.

MEANS PROVIDING SOME RULES OR SUGGESTIONS HOW TO SHARE THE INFORMATION B/W TWO DIFFERENT APPLICATIONS


Interoparble
WHY WE NEED TO LEARN WEBSERVICES:
=================================

   1. REUSE ALREADY OLD FUNCTIONALITY INTO NEW S/W
   2. INTEROPERABILITY
   3. USABILITY
   4. LOOSELY COUPLED
   5. EASE OF INTEGRATION
   6. DEPLOYABILITY


WEB SERVICE ARCHITECTURE:
=========================

WEB SERVICES SUGGESTED 6 COMPONENTS TO USE
TO SHARE THE INFORMATION B/W TWO APPLICATIONS

1. WSDL(WEB SERVICE DESCRIPTION LANGUAGE)
2. UDDI- OPTIONAL COMPONENET
3. SKELETON
4. STUB
5. SOAP(SIMPLE OBJECT ACCESS PROTOCOL)
6. HTTP(HYPER TEXT TRANSFER PROTOCOL)

JAVA WEBSERVICES API'S:
==========================
JAX-M-ASYNCHRONOUS WEBSERVICE- TAKES TIME TO GET THE RESPONSE

SYNCHRONOUS WEBSERVICES:
========================
   SOAP BASED WEBSERVICES
  
     JAX-RPC
     JAX-WS

 RESTFULL WEBWERVICES
     JAX-RS

JAX-RPC(JAVA API FOR XML-REMOTE PROCEDURE CALL)
================================================
THIS IS A SPECIFICATION GIVEN BY SUN ALONG WITH JDK1.4

USING THIS WE CAN DEVELOP BOTH SOAP BASED WEB SERVICES OR 
SOAP BASED WEB SERVICE CLIENTS.

1. JAX-RPC-SI(SUN IMPLEMENTATION)

THIS IS AN IMPLEMENTATION NAME FOR JAX-RPC WHICH IS GIVEN BY SUN MICROSYSTEM.

THIS API IS NOT GIVING ALONG WITH JDK, SEPARATELY WE NEED TO DOWNLOAD THIS API.


2. AXIS1 - IMPLEMENTATION GIVEN BY APACHE FOUNDATION

SEPARATELY WE NEED TO DOWNLOAD TO CREATE WEBSERVICE 


3. WEBLOGIC IMPLEMENTATION-BEA -ORACLE

4. WEBSPHERE IMPLEMENTATION - IBM

5. JBOSS IMPLMENETATION - REDHATT

THE ABOVE 5 ARE IMPLEMENTATIONS ARE FOR JAX-RPC

ALL THESE PROVIDE WSDL GENERATION TOOLS  AND THEY SHOULD PROVIDE SKELETON IF WE DEVELOP WEBSERVICE

=================================

JAX-WS(JAVA API FOR XML - WEBSERVICE)
------------------------------------

1. JAX-WS-RI(REFERENCE IMPLEMENTATION)


-NOT FULLY IMPLEMENTATION - GIVEN BY SUN
FROM JDK 1.6 INCLUDED THIS API ALONG WITH SOFTWARE BEFORE JDK 1.6 WE NEED TO SEPARATELY DOWNLOAD

2. METRO - GIVEN BY SUN-FULLY IMPLMENATION-NOT CAME WITH JDK-SEPARATELY NEED TO DOWNLOAD.


3. AXIS2-APACHE FOUNDATION


4. APACHE CXF - APACHE FOUNDATION

WHY APACHE FOUNDATION GIVEN TWO IMPLEMENTATIONS FOR JAX-WS

APACHE CXF IS SUPPORTS THE SPRING INTEGRATION AND AXIS2 IS NOT SUPPRTING WITH THE SPRING INTEGRATION
5. WEBLOGIC IMPLEMENTATION - BEA - ORACLE-ALONG WITH THE WEBLOGIC SERVER

6.WEB SPHERE IMPLEMENTATION - IBM - CAME ALONG WITH WEBLOGIC SERVER

7. JBOSS IMPLEMENATION - REDHATT

8. GLASSFISH IMPLEMENTATION -INTERNALLY CONTAINS METRO IMPLEMENTATION - SUN MIRCROSYSTEM 




JAX-RS(JAVA API FOR XML-REPRESENTATIONAL STATE)
================================================
1.JERSEY IMPLEMENTATION - SUN MICROSYSTEM-SEPARATELY DOWNLOAD

2.RESTEASY - REDHATT

3.RESTLET-JEROMY LOAVEL

4.APACHE CXF - APACHE FOUNDATION
5.APACHE WINK - APACHE FOUNDATION-NOT SUPPORTS SPRING INTEGRATION




DEVELOPING THE WEBSERVICE USING JAX-RPC (AXIS1 IMPLEMENTATION)

===============================================================


WEB SERVICE SERVICE CLASS:
=========================

1. TAKE THE DYNAMIC WEB PROJECT

2. UNDER SRC CREATE ONE CLASS

3. ADD THE SERVER AND START THE SERVER SO THAT AXIS1 IMPLMENETATION CLASSSES RELATED JAR FILES ARE GOING TO BE ADDED FOR YOUR PROJECT



JAX-B:
======

MARSHELLING:
============
THE PROCESS OF CONVERTING JAVA OBJECT INTO XML OBJECT.

UNMARSHELLING:
==============
THE PROCESS OF CONVERTING XML OBJECT INTO JAVA OBJECT.



REST FUL WEBSERVICES:
======================
REPRESENTATIONAL STATE TRANSFER

A WEB IS A COMBINATION OF RESOURCES

THAT MAY BE SERVLET, CONTROLLER, ....

http://localhost:2015/CustomerInfo/getCustomer

BASE URL

getCustomer-resource

DIFFERENCE B/W SOAP & REST WEBSERVICES
=======================================

MESSAGE FORMAT IN SOAP-XML FORMAT

MESSAGE FORMAT IO REST - XML,JSON,TEXT...

INTERFACE DEFINITION IN SOAP - WSDL

INTERFACE DEFINITION IN REST - WADL
(WEB APPLICATION DESCRIPTION LANGUAGE)

TRANSPORT PROTOCOL IN SOAP - HTTP
TRANSPORT PROTOCOL IN REST - HTTP/HTTPS

SOAP - AXIS2,JAXWS
REST IMPLEMENTATIONS

JERSY - SUN
APACHE CXF - APACHE FOUNDATION

RESTEASY -JBOSS

LETS TALK ABOUT JERSY!!!!

GET REQUESTED METHOD - TO GET THE INFORMATION
POST REQEUESTED METHOD - TO INSERT THE INFO
PUT REQUESTED METHOD - TO UPDATE THE INFO
DELETE REQUESTED METHOD - TO DELETE THE INFO


JAXB WITH REST
JSON WITH REST


JAX-WS
------
Annotaions:
------------
@WEBSERVICE->madatory annotation we need to use in both interface and implementation class

three  optional parameters

servicename,targetnamespace,enpointrInterface(only in implementation class)


service name cann be anything but should be unique...(if we r not giving anything it will take ur cls name)

targetnamespace->if we r not using pacage name in reverse order...

enpointrInterface-->it will take fully qualified name of  interface..


@WebMethod

@WebParam




